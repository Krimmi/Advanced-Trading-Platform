/**
 * Defines the possible timeframes for strategy execution
 */
export enum TimeFrame {
  TICK = 'TICK',
  ONE_MINUTE = '1m',
  FIVE_MINUTES = '5m',
  FIFTEEN_MINUTES = '15m',
  THIRTY_MINUTES = '30m',
  ONE_HOUR = '1h',
  FOUR_HOURS = '4h',
  ONE_DAY = '1d',
  ONE_WEEK = '1w',
  ONE_MONTH = '1M'
}

/**
 * Represents the current state of a strategy
 */
export enum StrategyState {
  INITIALIZED = 'INITIALIZED',
  RUNNING = 'RUNNING',
  PAUSED = 'PAUSED',
  STOPPED = 'STOPPED',
  ERROR = 'ERROR'
}

/**
 * Defines the type of signal generated by a strategy
 */
export enum SignalType {
  BUY = 'BUY',
  SELL = 'SELL',
  HOLD = 'HOLD',
  STRONG_BUY = 'STRONG_BUY',
  STRONG_SELL = 'STRONG_SELL'
}

/**
 * Represents a trading signal with metadata
 */
export interface Signal {
  type: SignalType;
  symbol: string;
  timestamp: Date;
  confidence: number; // 0-1 representing confidence level
  metadata: Record<string, any>; // Additional signal-specific data
}

/**
 * Represents a strategy parameter with metadata
 */
export interface StrategyParameter<T> {
  name: string;
  value: T;
  type: 'number' | 'string' | 'boolean' | 'array' | 'object';
  min?: number;
  max?: number;
  options?: T[];
  description: string;
  isRequired: boolean;
}

/**
 * Represents performance metrics for a strategy
 */
export interface StrategyPerformance {
  totalReturn: number;
  annualizedReturn: number;
  sharpeRatio: number;
  maxDrawdown: number;
  winRate: number;
  profitFactor: number;
  averageWin: number;
  averageLoss: number;
  expectancy: number;
  tradesPerDay: number;
  metadata: Record<string, any>; // Additional performance metrics
}

/**
 * Represents a trade executed by a strategy
 */
export interface StrategyTrade {
  id: string;
  symbol: string;
  direction: 'LONG' | 'SHORT';
  entryPrice: number;
  entryTime: Date;
  entrySignalType: SignalType;
  exitPrice?: number;
  exitTime?: Date;
  exitSignalType?: SignalType;
  quantity: number;
  pnl?: number;
  pnlPercentage?: number;
  fees?: number;
  status: 'OPEN' | 'CLOSED' | 'CANCELLED';
  metadata: Record<string, any>; // Additional trade-specific data
}